}
res = sapply(ll, cur_holding)
class(res)
head(res)
dim(res)
head(t(res))
df = as.data.frame(t(sapply(ll, cur_holding)))
head(df)
tail(df)
colnames(df) = c("ticker", "cur_holding")
head(df, 30)
df = df[order(df[,"cur_holding"], decreasing = TRUE),]
head(df)
class(df)
class(df[,"cur_holding"])
base_dte ="2020-03-20"
data_dir$TSLA[base_date]
data_env$TSLA[base_date]
data_env$TSLA[base_dte]
mean(data_env$TSLA[base_dte])
# 2. Top holdings
latest_stat = function(le, base_date) {
base_hld = mean(le[["y_daily"]][base_date], na.rm=TRUE)
cur_hld = mean(as.matrix(tail(le[["y_daily"]], 10)), na.rm=TRUE)
list(tkr=le[["tkr"]], base_holding=base_hld, cur_holding=cur_hld)
}
df = as.data.frame(t(sapply(ll, cur_holding)))
head(df)
dim(df)
df = as.data.frame(t(sapply(ll, latest_stat)))
head(df)
tail(df)
df = df[order(df[,"cur_holding"], decreasing = TRUE),]
df[,"base_holding"] = as.numeric(df[,"base_holding"])
df[,"base_holding"] = as.numeric(df[,"base_holding"])
df[,"cur_holding"] = as.numeric(df[,"cur_holding"])
head(df)
sapply(df, class)
df[,"tkr"] = as.character(df[,"tkr"])
sapply(df, class)
head(df)
df = df[order(df[,"cur_holding"], decreasing = TRUE),]
head(df)
head(df, 10)
df[,"change"] = df[,"cur_holding"] / df[,"base_holding"]
head(df)
df[,"change"] = 100*(df[,"cur_holding"] / df[,"base_holding"] - 1)
head(df, 100)
df1 = head(df, 20)
head(df)
df1
df1 = head(df, 100)
df1
df1 = df1[order(df1[,"change"], decreasing=TRUE),]
head(df1)
head(df, 10)
library(xtable)
xtable(head(df, 10))
# 3. stocks with more than 1/2 mn accounts
df[which(df[,"cur_holding"] > 500000), "tkr"]
# 3. stocks with more than 1/2 mn accounts
df[which(df[,"cur_holding"] > 100000), "tkr"]
# 2. Top holdings
df = as.data.frame(t(sapply(ll, latest_stat)))
df[,"tkr"] = as.character(df[,"tkr"])
df[,"base_holding"] = as.numeric(df[,"base_holding"])
df[,"cur_holding"] = as.numeric(df[,"cur_holding"])
df = df[order(df[,"cur_holding"], decreasing = TRUE),]
head(df, 10)
# 3. stocks with more than 100k accounts
df[which(df[,"cur_holding"] > 100000), "tkr"]
# 4. largest percentage increase since Mar 20
df[,"pct_change"] = 100*(df[,"cur_holding"] / df[,"base_holding"] - 1)
df1 = head(df, 100)
df1 = df1[order(df1[,"pct_change"], decreasing=TRUE),]
head(df1, 10)
df[100, ]
df[80:100, ]
# 4.1 largest percentage decrease since Mar 20
df1 = df1[order(df1[,"pct_change"], decreasing=FALSE),]
head(df1, 10)
dim(df)
# 4.1 largest percentage decrease since Mar 20
df2 = df[which(df[,"base_holding"] > 100000),]
dim(df2)
df2
# 4.1 largest percentage decrease since Mar 20
df2 = df[which(df[,"base_holding"] > 50000),]
dim(df2)
df2
which(df[,"pct_change"] < 0)
ix = which(df[,"pct_change"] < 0)
head(df[ix, ], 30)
# 4.1 largest percentage decrease since Mar 20
df2 = df[which(df[,"pct_change"] < 0),]
dim(df2)
head(df2)
# 4.1 largest percentage decrease since Mar 20
df2 = df[which(df[,"pct_change"] < 0),]
dim(df2)
df2 = df2[order(df2[,"base_holding"], decreasing = TRUE),]
head(df1, 10)
head(df2, 10)
# 4.1 largest percentage decrease since Mar 20
df2 = df[which(df[,"pct_change"] < 0 & df[,"base_holding"] > 10000),]
dim(df2)
df2
df2 = df2[order(df2[,"pct_change"], decreasing = TRUE),]
head(df2, 10)
df2 = df2[order(df2[,"pct_change"], decreasing =FALSE),]
head(df2, 10)
head(df)
top_nm = head(df, 10)[,"tkr"]
top_nm
?plot.xts
s="F"
png(s, width = 640, height=480)
plot(get(s, envir=data_env)["2019-06::"], main=s)
dev.off()
getwd()
home = "/mnt/WanChai/Dropbox/GITHUB_REPO/Robinhood_at_a_glance"
utils = "/mnt/WanChai/Dropbox/GITHUB_REPO/Robinhood_at_a_glance/utils"
plot_dir = "/mnt/WanChai/Dropbox/GITHUB_REPO/Robinhood_at_a_glance/plots"
dat_dir = "/mnt/WanChai/Dropbox/AlgoTrading/Robinhood/robintrack_popularity_export"
setwd(home)
# Time Series Plots (one yr)
setwd(plot_dir)
for ( s in top_nm ) {
png(paste(s, ".png", sep=""), width = 640, height=480)
plot(get(s, envir=data_env)["2019-06::"], main=s)
dev.off()
}
getwd()
top_nm
s
paste(s, ".png", sep="")
?png
head(data_env$AAPL)
get(s, envir=data_env)["2019-06::"]
# Time Series Plots (one yr)
setwd(plot_dir)
for ( s in top_nm ) {
png(paste(s, ".png", sep=""), width = 640, height=480)
plot(get(s, envir=data_env)["2019-06::"], main=s)
dev.off()
}
# Time Series Plots (one yr)
setwd(home)
for ( s in top_nm ) {
png(paste(s, ".png", sep=""), width = 640, height=480)
plot(get(s, envir=data_env)["2019-06::"], main=s)
dev.off()
}
png(paste(s, ".png", sep=""), width = 640, height=480)
plot(get(s, envir=data_env)["2019-06::"], main=s)
dev.off()
top_nm
for ( s in top_nm ) {
print(s)
png(paste(s, ".png", sep=""), width = 640, height=480)
plot(get(s, envir=data_env)["2019-06::"], main=s)
dev.off()
}
# Time Series Plots (one yr)
setwd(home)
for ( i in 1:len(top_nm) ) {
print(i)
png(paste(top_nm[i], ".png", sep=""), width = 640, height=480)
plot(get(top_nm[i], envir=data_env)["2019-06::"], main=s)
dev.off()
}
getwd()
# Time Series Plots (one yr)
setwd(home)
for ( i in 1:len(top_nm) ) {
print(i)
png(paste(top_nm[i], ".png", sep=""), width = 640, height=480)
print({plot(get(top_nm[i], envir=data_env)["2019-06::"], main=s)})
dev.off()
}
# Time Series Plots (one yr)
setwd(plot_dir)
for ( s in top_nm ) {
print(s)
png(paste(s, ".png", sep=""), width = 640, height=480)
print({plot(get(s, envir=data_env)["2019-06::"], main=s)})
dev.off()
}
# Time Series Plots (one yr)
setwd(plot_dir)
png("Top_10.png", width = 640, height=480)
par(mfrow=c(2,5), mar=c(2,2,2,2))
for ( s in top_nm ) {
plot(get(s, envir=data_env)["2019-06::"], main=s)
}
dev.off()
getwd)()
getwd()
X11()
xx=get(s, envir=data_env)["2019-06::"]
head(xx)
s
tail(xx)
plot(index(xx), xx, type="l")
plot(as.Date(index(xx)), xx, type="l")
plot(xx[,1] ~ as.Date(index(xx)), type="l")
plot(xx ~ as.Date(index(xx)), type="l")
head(xx)
xx1 = as.data.frame(xx)
head(xx1)
xx1[,"date"] = index(xx)
head(xx1)
plot(xx1[,"date"], xx1[,1], type="l")
plot(as.Date(xx1[,"date"]), xx1[,1], type="l")
plot(xx, xaxt="n")
plot(V1~date, xx1, xaxt="n", type="l")
axis(1, format(xx1[,"date"], "%b %d"), cex.axis=0.7)
class(xx1[,"date"])
axis(1, format(as.Date(xx1[,"date"]), "%b %d"), cex.axis=0.7)
tmp = format(xx1[,"date"], "%b %d")
head(tmp)
tail(tmp)
axis(1, xx1[,"date"],format(as.Date(xx1[,"date"]), "%b %d"), cex.axis=0.7)
?axis
axis(1, xx1[,"date"],format(as.Date(xx1[,"date"]), "%b %d"), ticks=FALSE, cex.axis=0.7)
axis(1, xx1[,"date"],format(as.Date(xx1[,"date"]), "%b %d"), tick=FALSE, cex.axis=0.7)
plot(V1~date, xx1, xaxt="n", type="l")
axis(1, xx1[,"date"],format(as.Date(xx1[,"date"]), "%b %d"), tick=FALSE, cex.axis=0.7)
head(xx)
head(as.numeric(xx))
?seq
nrow(xx)
s
y = get(s, envir=data_env)["2019-06::"]
tick.loc = seq(from=1, to=nrow(y), length.out=5)
tick.loc
tick.loc = seq.int(from=1, to=nrow(y), length.out=5)
tick.loc
tick.loc = as.integer(seq.int(from=1, to=nrow(y), length.out=5))
tick.loc
tick.loc = as.integer(seq.int(from=1, to=nrow(y), length.out=10))
y = get(s, envir=data_env)["2019-06::"]
tick.loc = as.integer(seq.int(from=1, to=nrow(y), length.out=10))
df3 = data.frame(date=index(y), y=as.numeric(y))
plot(y~date, data=df3, xlab="", ylab="", xaxt="n", type="l", main=s)
axis(1, at=df3[tick.loc,"date"], labels=format(df3[tick.loc,"date"], "%b-%d"), cex.axis=0.6)
ix = which(as.Date(df3[,"date"]) == as.Date("2020-03-20") )
ix
abline(v=ix)
abline(v=as.Date("2020-03-20"))
# Time Series Plots (one yr)
setwd(plot_dir)
png("Top_10.png", width = 640, height=480)
par(mfrow=c(2,5), mar=c(2,2,2,2))
for ( s in top_nm ) {
y = get(s, envir=data_env)["2019-06::"]
tick.loc = as.integer(seq.int(from=1, to=nrow(y), length.out=10))
df3 = data.frame(date=index(y), y=as.numeric(y))
ix = which(as.Date(df3[,"date"]) == as.Date("2020-03-20") )
plot(y~date, data=df3, xlab="", ylab="", xaxt="n", type="l", main=s)
abline(v=ix)
axis(1, at=df3[tick.loc,"date"], labels=format(df3[tick.loc,"date"], "%b-%d"), cex.axis=0.6)
}
dev.off()
setwd(plot_dir)
png("Top_10.png", width = 1080, height=480)
par(mfrow=c(2,5), mar=c(2,2,2,2))
for ( s in top_nm ) {
y = get(s, envir=data_env)["2019-06::"]
tick.loc = as.integer(seq.int(from=1, to=nrow(y), length.out=10))
df3 = data.frame(date=index(y), y=as.numeric(y))
ix = which(as.Date(df3[,"date"]) == as.Date("2020-03-20") )
plot(y~date, data=df3, xlab="", ylab="", xaxt="n", type="l", main=s)
abline(v=ix)
axis(1, at=df3[tick.loc,"date"], labels=format(df3[tick.loc,"date"], "%b-%d"), cex.axis=0.6)
}
dev.off()
# 2. Top holdings
df = as.data.frame(t(sapply(ll, latest_stat)))
df[,"tkr"] = as.character(df[,"tkr"])
df[,"base_holding"] = as.numeric(df[,"base_holding"])
df[,"cur_holding"] = as.numeric(df[,"cur_holding"])
df[,"pct_change"] = 100*(df[,"cur_holding"] / df[,"base_holding"] - 1)
df = df[order(df[,"cur_holding"], decreasing = TRUE),]
top_nm = head(df, 10)[,"tkr"]
head(df)
head(df, 10)
# Time Series Plots (one yr)
setwd(plot_dir)
png("Top_10.png", width = 1080, height=480)
par(mfrow=c(3,4), mar=c(2,2,2,2))
for ( s in top_nm ) {
y = get(s, envir=data_env)["2019-06::"]
tick.loc = as.integer(seq.int(from=1, to=nrow(y), length.out=10))
df3 = data.frame(date=index(y), y=as.numeric(y))
ix = which(as.Date(df3[,"date"]) == as.Date("2020-03-20") )
plot(y~date, data=df3, xlab="", ylab="", xaxt="n", type="l", main=s)
abline(v=ix)
axis(1, at=df3[tick.loc,"date"], labels=format(df3[tick.loc,"date"], "%b-%d"), cex.axis=0.6)
}
dev.off()
png("Top_10.png", width = 1080, height=480)
par(mfrow=c(2,5), mar=c(2,2,2,2))
for ( s in top_nm ) {
y = get(s, envir=data_env)["2019-06::"]
tick.loc = as.integer(seq.int(from=1, to=nrow(y), length.out=10))
df3 = data.frame(date=index(y), y=as.numeric(y))
ix = which(as.Date(df3[,"date"]) == as.Date("2020-03-20") )
plot(y~date, data=df3, xlab="", ylab="", xaxt="n", type="l", main=s)
abline(v=ix)
axis(1, at=df3[tick.loc,"date"], labels=format(df3[tick.loc,"date"], "%b-%d"), cex.axis=0.6)
}
dev.off()
png("Top_10.png", width = 1080, height=480)
par(mfrow=c(5,2), mar=c(2,2,2,2))
for ( s in top_nm ) {
y = get(s, envir=data_env)["2019-06::"]
tick.loc = as.integer(seq.int(from=1, to=nrow(y), length.out=10))
df3 = data.frame(date=index(y), y=as.numeric(y))
ix = which(as.Date(df3[,"date"]) == as.Date("2020-03-20") )
plot(y~date, data=df3, xlab="", ylab="", xaxt="n", type="l", main=s)
abline(v=ix)
axis(1, at=df3[tick.loc,"date"], labels=format(df3[tick.loc,"date"], "%b-%d"), cex.axis=0.6)
}
dev.off()
png("Top_10.png", width = 640, height=640)
par(mfrow=c(3,4), mar=c(2,2,2,2))
for ( s in top_nm ) {
y = get(s, envir=data_env)["2019-06::"]
tick.loc = as.integer(seq.int(from=1, to=nrow(y), length.out=10))
df3 = data.frame(date=index(y), y=as.numeric(y))
ix = which(as.Date(df3[,"date"]) == as.Date("2020-03-20") )
plot(y~date, data=df3, xlab="", ylab="", xaxt="n", type="l", main=s)
abline(v=ix)
axis(1, at=df3[tick.loc,"date"], labels=format(df3[tick.loc,"date"], "%b-%d"), cex.axis=0.6)
}
dev.off()
png("Top_10.png", width = 1080, height=640)
par(mfrow=c(3,4), mar=c(2,2,2,2))
for ( s in top_nm ) {
y = get(s, envir=data_env)["2019-06::"]
tick.loc = as.integer(seq.int(from=1, to=nrow(y), length.out=10))
df3 = data.frame(date=index(y), y=as.numeric(y))
ix = which(as.Date(df3[,"date"]) == as.Date("2020-03-20") )
plot(y~date, data=df3, xlab="", ylab="", xaxt="n", type="l", main=s)
abline(v=ix)
axis(1, at=df3[tick.loc,"date"], labels=format(df3[tick.loc,"date"], "%b-%d"), cex.axis=0.6)
}
dev.off()
png("Top_10.png", width = 1080, height=640)
par(mfrow=c(3,4), mar=c(2,2,2,2))
for ( s in top_nm ) {
y = get(s, envir=data_env)["2019-06::"]
tick.loc = as.integer(seq.int(from=1, to=nrow(y), length.out=10))
df3 = data.frame(date=index(y), y=as.numeric(y))
ix = which(as.Date(df3[,"date"]) == as.Date("2020-03-20") )
plot(y~date, data=df3, xlab="", ylab="", xaxt="n", type="l", lwd=3, col="red", main=s)
abline(v=ix)
axis(1, at=df3[tick.loc,"date"], labels=format(df3[tick.loc,"date"], "%b-%d"), cex.axis=0.6)
}
dev.off()
png("Top_10.png", width = 1080, height=640)
par(mfrow=c(3,4), mar=c(2,2,2,2))
for ( s in top_nm ) {
y = get(s, envir=data_env)["2019-06::"]
tick.loc = as.integer(seq.int(from=1, to=nrow(y), length.out=10))
df3 = data.frame(date=index(y), y=as.numeric(y))
ix = which(as.Date(df3[,"date"]) == as.Date("2020-03-20") )
plot(y~date, data=df3, xlab="", ylab="", xaxt="n", type="l", lwd=5, col="red", main=s)
abline(v=ix)
axis(1, at=df3[tick.loc,"date"], labels=format(df3[tick.loc,"date"], "%b-%d"), cex.axis=0.6)
}
dev.off()
?getSymbols
# Get YF stock prices
for (s in top_nm) getSymbols(s, env=globalenv(), src="yahoo", from="1800-01-01")
ls()
?new
s
x = get(s)["2019-06::"]
head(x)
tail(x)
class(x)
df4 = data.frame(date=index(x), x=x[,6])
head(df4)
ix = which(tkr == top_10[1])
ix = which(tkr == top_nm[1])
ix
ll[[2568]]["tkr"]
top_nm
s
ix = which(tkr == s)
ix
y = ll[[ix]]$y_daily
head(y)
tail(y)
head(df)
head(df, 10)
X11();plot(y)
head(y)
df3 = data.frame(date=as.Date(index(y)), y=as.numeric(y))
head(df3)
y = ll[[ix]]$y_daily["2019-06::"]
head(y)
df3 = data.frame(date=as.Date(index(y)), y=as.numeric(y))
head(df3, 10)
tail(df3)
y1 = get(s)["2019-06::"]
head(y1)
df4 = data.frame(date=index(y1), y1=as.numeric(y1))
head(df4, 10)
tail(df4, 10)
?merge
df5 = merge(x=df3, y=df4, by=date, all.x=FALSE, all.y=TRUE)
df5 = merge(x=df3, y=df4, by="date", all.x=FALSE, all.y=TRUE)
dim(df5)
dim(df3)
dim(df4)
y1 = get(s)["2019-06::", 6]
dim(y1)
df4 = data.frame(date=index(y1), y1=as.numeric(y1))
dim(df4)
df5 = merge(x=df3, y=df4, by="date", all.x=FALSE, all.y=TRUE)
dim(df5)
head(df5)
tail(df5)
tick.loc = as.integer(seq.int(from=1, to=nrow(df5), length.out=10))
X11()
plot(y~date, data=df5, xlab="", ylab="", xaxt="n", type="l", lwd=5, col="red", main=s)
par(new=TRUE)
plot(y1~date, data=df5, xlab="", ylab="", xaxt="n", type="l", lwd=1, col="blue", )
plot(y1~date, data=df5, xlab="", ylab="", xaxt="n", type="l", lwd=1, col="blue" )
axis(1, at=df3[tick.loc,"date"], labels=format(df3[tick.loc,"date"], "%b-%d"), cex.axis=0.6)
axis(1, at=df5[tick.loc,"date"], labels=format(df5[tick.loc,"date"], "%b-%d"), cex.axis=0.6)
X11()
plot(y~date, data=df5, xlab="", ylab="", xaxt="n", type="l", lwd=5, col="red", main=s)
par(new=TRUE)
plot(y1~date, data=df5, xlab="", ylab="", xaxt="n", type="l", lwd=1, col="blue" )
axis(1, at=df5[tick.loc,"date"], labels=format(df5[tick.loc,"date"], "%b-%d"), cex.axis=0.6)
X11()
plot(y~date, data=df5, xlab="", ylab="", xaxt="n", type="l", lwd=5, col="red", main=s)
par(new=TRUE)
plot(y1~date, data=df5, xlab="", ylab="", xaxt="n", yaxt="n", type="l", lwd=1, col="blue" )
axis(1, at=df5[tick.loc,"date"], labels=format(df5[tick.loc,"date"], "%b-%d"), cex.axis=0.6)
png("Top_10.png", width = 1080, height=640)
par(mfrow=c(3,4), mar=c(2,2,2,2))
for ( s in top_nm ) {
ix = which(tkr == s)
y = ll[[ix]]$y_daily["2019-06::"]
df3 = data.frame(date=as.Date(index(y)), y=as.numeric(y))
y1 = get(s)["2019-06::", 6]
df4 = data.frame(date=index(y1), y1=as.numeric(y1))
df5 = merge(x=df3, y=df4, by="date", all.x=FALSE, all.y=TRUE)
tick.loc = as.integer(seq.int(from=1, to=nrow(df5), length.out=10))
plot(y~date, data=df5, xlab="", ylab="", xaxt="n", type="l", lwd=5, col="red", main=s)
par(new=TRUE)
plot(y1~date, data=df5, xlab="", ylab="", xaxt="n", yaxt="n", type="l", lwd=1, col="blue" )
axis(1, at=df5[tick.loc,"date"], labels=format(df5[tick.loc,"date"], "%b-%d"), cex.axis=0.6)
}
dev.off()
head(df1, 10)
head(df2, 10)
head(df1, 10)
# 4. largest percentage increase since Mar 20
df1 = head(df, 100)
df1 = df1[order(df1[,"pct_change"], decreasing=TRUE),]
head(df1, 10)
incr_nm = head(df1, 10)[,"tkr"]
incr_nm
decr_nm = head(df2, 10)[,"tkr"]
decr_nm
for (s in incr_nm) getSymbols(s, env=globalenv(), src="yahoo", from="1800-01-01")
for (s in decr_nm) getSymbols(s, env=globalenv(), src="yahoo", from="1800-01-01")
ls()
# Time Series Plots (one yr)
setwd(plot_dir)
png("Largest_incr.png", width = 1080, height=640)
par(mfrow=c(3,4), mar=c(2,2,2,2))
for ( s in incr_nm ) {
ix = which(tkr == s)
y = ll[[ix]]$y_daily["2019-06::"]
df3 = data.frame(date=as.Date(index(y)), y=as.numeric(y))
y1 = get(s)["2019-06::", 6]
df4 = data.frame(date=index(y1), y1=as.numeric(y1))
df5 = merge(x=df3, y=df4, by="date", all.x=FALSE, all.y=TRUE)
tick.loc = as.integer(seq.int(from=1, to=nrow(df5), length.out=10))
plot(y~date, data=df5, xlab="", ylab="", xaxt="n", type="l", lwd=5, col="red", main=s)
par(new=TRUE)
plot(y1~date, data=df5, xlab="", ylab="", xaxt="n", yaxt="n", type="l", lwd=1, col="blue" )
axis(1, at=df5[tick.loc,"date"], labels=format(df5[tick.loc,"date"], "%b-%d"), cex.axis=0.6)
}
dev.off()
png("Largest_decr.png", width = 1080, height=640)
par(mfrow=c(3,4), mar=c(2,2,2,2))
for ( s in decr_nm ) {
ix = which(tkr == s)
y = ll[[ix]]$y_daily["2019-06::"]
df3 = data.frame(date=as.Date(index(y)), y=as.numeric(y))
y1 = get(s)["2019-06::", 6]
df4 = data.frame(date=index(y1), y1=as.numeric(y1))
df5 = merge(x=df3, y=df4, by="date", all.x=FALSE, all.y=TRUE)
tick.loc = as.integer(seq.int(from=1, to=nrow(df5), length.out=10))
plot(y~date, data=df5, xlab="", ylab="", xaxt="n", type="l", lwd=5, col="red", main=s)
par(new=TRUE)
plot(y1~date, data=df5, xlab="", ylab="", xaxt="n", yaxt="n", type="l", lwd=1, col="blue" )
axis(1, at=df5[tick.loc,"date"], labels=format(df5[tick.loc,"date"], "%b-%d"), cex.axis=0.6)
}
dev.off()
setwd(home)
save.image("Robintrack.RData")
len(nm)
head(nm)
